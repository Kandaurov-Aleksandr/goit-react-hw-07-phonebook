{"version":3,"sources":["ContactList/ContactList.module.css","App.module.css","Filter/Filter.module.css","redux/contacts.js/contacts-actions.js","redux/contacts.js/contacts-reducer.js","redux/store.js","redux/contacts.js/contacts-operations.js","ContactForm/ContactForm.js","redux/contacts.js/contacts-selectors.js","Filter/Filter.js","ContactList/ContactList.js","App.js","index.js","ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","filter","id","loading","combineReducers","store","configureStore","reducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","axios","defaults","baseURL","Phonebook","useForm","register","handleSubmit","errors","useState","name","setName","number","setNumber","dispatch","useDispatch","myNamesInItem","useSelector","reset","handleChange","e","preventDefault","currentTarget","value","className","s","container","onSubmit","contactName","contactNumber","map","contact","toLocaleLowerCase","includes","alert","post","then","data","catch","error","label","input","autoComplete","type","ref","required","minLength","onChange","textError","pattern","btn","getValueForFilter","filterContactsByName","createSelector","normalizedFilter","Filter","contactsActions","placeholder","ContactList","useEffect","a","get","ondeleteContact","contactId","delete","list","item","text","onClick","width","App","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94b8df84.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__oAxP0\",\"item\":\"ContactList_item__3zf6_\",\"text\":\"ContactList_text__TngEu\",\"btn\":\"ContactList_btn__3BinE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2f1US\",\"container\":\"App_container__1JAcn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3fbFk\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contact/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contact/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contact/fetchContactsError');\n\nexport const addContactRequest = createAction('contact/addContactRequest');\nexport const addContactSuccess = createAction('contact/addContactSuccess');\nexport const addContactError = createAction('contact/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contact/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contact/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contact/deleteContactError');\n\nexport const changeFilter = createAction('contact/changeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\n// const error = createReducer(null, {});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  // error,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts.js/contacts-reducer';\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\n// const persistor = persistStore(store);\n// export { store, persistor };\nexport default store;\n\n// ***Redux***\n\n// import { createStore, combineReducers } from 'redux';\n// import { combineReducers } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// const store = createStore(rooReducer, composeWithDevTools());\n// const rooReducer = combineReducers({contacts: contactsReducer});\n","/* eslint-disable import/no-anonymous-default-export */\nimport axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nexport const addContact = (contactName, contactNumber) => dispatch => {\n  const contact = {\n    name: contactName,\n    number: contactNumber,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../redux/contacts.js/contacts-operations';\nimport s from '../ContactForm/ContactForm.module.css';\n\nexport default function Phonebook() {\n  const { register, handleSubmit, errors } = useForm();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const myNamesInItem = useSelector(state => state.contacts.items);\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const onSubmit = () => {\n    const getContacts = myNamesInItem.map(contact =>\n      contact.name.toLocaleLowerCase(),\n    );\n\n    const isGetContactAlready = getContacts.includes(name.toLocaleLowerCase());\n\n    if (isGetContactAlready) {\n      reset();\n      return alert(`${name} is already in contacts!`);\n    }\n    dispatch(addContact(name, number));\n    reset();\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className={s.container}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            autoComplete=\"off\"\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            ref={register({ required: true, minLength: 3 })}\n            onChange={handleChange}\n          />\n        </label>\n        {errors.name && errors.name.type === 'required' && (\n          <p className={s.textError}>This is required </p>\n        )}\n\n        {errors.name && errors.name.type === 'minLength' && (\n          <p className={s.textError}>\n            This is field is required min length of 3\n          </p>\n        )}\n\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            autoComplete=\"off\"\n            name=\"number\"\n            type=\"text\"\n            value={number}\n            ref={register({\n              required: true,\n              pattern: /^[0-9]+$/gm,\n              minLength: 7,\n            })}\n            onChange={handleChange}\n          />\n        </label>\n\n        {errors.number && errors.number.type === 'required' && (\n          <p className={s.textError}>This is required </p>\n        )}\n\n        {errors.number && errors.number.type === 'pattern' && (\n          <p className={s.textError}>There must be numbers</p>\n        )}\n\n        {errors.number && errors.number.type === 'minLength' && (\n          <p className={s.textError}>Number too short</p>\n        )}\n\n        <button className={s.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n}\n","import { createSelector } from 'reselect';\n\nexport const getValueForFilter = state => state.contacts.filter;\nexport const getContact = state => state.contacts.items;\n\nexport const filterContactsByName = createSelector(\n  [getContact, getValueForFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as contactsActions from '../redux/contacts.js/contacts-actions';\nimport s from '../Filter/Filter.module.css';\nimport { getValueForFilter } from '../redux/contacts.js/contacts-selectors';\n\nexport default function Filter() {\n  const value = useSelector(getValueForFilter);\n  const dispatch = useDispatch();\n  const OnFilterContacts = e =>\n    dispatch(contactsActions.changeFilter(e.currentTarget.value));\n\n  return (\n    <>\n      <label>\n        <input\n          className={s.input}\n          type=\"text\"\n          value={value}\n          onChange={OnFilterContacts}\n          placeholder=\" Fined contacts by name\"\n        ></input>\n      </label>\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../redux/contacts.js/contacts-operations';\nimport { GoOrganization } from 'react-icons/go';\nimport { RiDeleteBin3Fill } from 'react-icons/ri';\nimport s from '../ContactList/ContactList.module.css';\nimport { filterContactsByName } from '../redux/contacts.js/contacts-selectors';\nimport { fetchContacts } from '../redux/contacts.js/contacts-operations';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(filterContactsByName);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const ondeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <>\n      <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n          <li className={s.item} key={id}>\n            <GoOrganization />\n            <span className={s.text}>{name}: </span>\n            <span className={s.text}>{number}</span>\n            <button className={s.btn} onClick={() => ondeleteContact(id)}>\n              <RiDeleteBin3Fill value={{ width: 20 }} />{' '}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import s from './App.module.css';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\n\nexport default function App() {\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\n// import { store, persistor } from './redux/store';\nimport store from './redux/store';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__3y85P\",\"label\":\"ContactForm_label__k5e6O\",\"container\":\"ContactForm_container__2yAsL\",\"btn\":\"ContactForm_btn__3QQAu\",\"textError\":\"ContactForm_textError__3dEEC\"};"],"sourceRoot":""}
{"version":3,"sources":["components/IsAlreadyTrue/isAlreadyTrueAnimation.module.css","components/Filter/FilterAnimation.module.css","redux/contacts/contactsAction.js","redux/contacts/contactsOperation.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/IsAlreadyTrue/IsAlreadyTrue.js","redux/contacts/contactsSelectors.js","components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","getContactsRequest","getContactsSuccess","getContactsError","delContactRequest","delContactSuccess","delContactError","filter","addContact","name","number","dispatch","contactsAction","axios","post","then","respons","data","catch","error","getContacts","get","delContact","id","delete","mapDispatchToProps","onDelContact","contactsOperation","connect","contact","className","onClick","ContactList","contacts","TransitionGroup","component","map","CSSTransition","timeout","classNames","ContactForm","state","handleSubmit","e","preventDefault","props","changeIsAlready","onAddItem","setState","handleChange","target","value","onSubmit","this","onChange","type","maxLength","autoComplete","required","Component","onChangeFilter","IsAlreadyTrue","onChangeIsAlready","setTimeout","alert","getContactsSelector","app","getFilter","getLoading","loading","contactsArrayFilteredSel","createSelector","filterSelelector","toLowerCase","includes","getContactIsAlready","find","App","isAlready","contactsSelectors","contactsArrayFiltered","in","animationIsAlready","unmountOnExit","appear","length","FilterAnimation","contactsSelector","appFilter","createReducer","action","payload","appContacts","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf522861.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"isAlreadyTrueAnimation_enter__JTh_X\",\"enterActive\":\"isAlreadyTrueAnimation_enterActive__3RMil\",\"exit\":\"isAlreadyTrueAnimation_exit__dFPY4\",\"exitActive\":\"isAlreadyTrueAnimation_exitActive__1iw5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"FilterAnimation_enter__AN0cU\",\"enterActive\":\"FilterAnimation_enterActive__1uYls\",\"exit\":\"FilterAnimation_exit__vgEVy\",\"exitActive\":\"FilterAnimation_exitActive__1x_XY\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nconst addContactRequest = createAction(\"contact/addRequest\");\nconst addContactSuccess = createAction(\"contact/addSuccess\");\nconst addContactError = createAction(\"contact/addError\");\n\nconst getContactsRequest = createAction(\"contact/getRequest\");\nconst getContactsSuccess = createAction(\"contacts/getSuccess\");\nconst getContactsError = createAction(\"contacts/getError\");\n\nconst delContactRequest = createAction(\"contact/delRequest\");\nconst delContactSuccess = createAction(\"contact/delSuccess\");\nconst delContactError = createAction(\"contact/delError\");\n\nconst filter = createAction(\"app/filter\");\n\nexport default {\n addContactRequest,\n addContactSuccess,\n addContactError,\n getContactsRequest,\n getContactsSuccess,\n getContactsError,\n delContactRequest,\n delContactSuccess,\n delContactError,\n filter\n};\n","import axios from \"axios\";\nimport contactsAction from \"./contactsAction\";\n\nconst addContact = (name, number) => dispatch => {\n dispatch(contactsAction.addContactRequest());\n axios\n  .post(\"http://localhost:2000/contacts\", { name, number })\n  .then(respons => dispatch(contactsAction.addContactSuccess(respons.data)))\n  .catch(error => dispatch(contactsAction.addContactError(error)));\n};\n\nconst getContacts = () => dispatch => {\n dispatch(contactsAction.getContactsRequest());\n\n axios\n  .get(\"http://localhost:2000/contacts\")\n  .then(respons => dispatch(contactsAction.getContactsSuccess(respons.data)))\n  .catch(error => dispatch(contactsAction.getContactsError(error)));\n};\n\nconst delContact = id => dispatch => {\n dispatch(contactsAction.delContactRequest());\n\n axios\n  .delete(\"http://localhost:2000/contacts/\" + id)\n  .then(dispatch(contactsAction.delContactSuccess(id)))\n  .catch(error => dispatch(contactsAction.delContactError(error)));\n};\n\nexport default { addContact, getContacts, delContact };\n","import React from \"react\";\nimport \"./ContactList.css\"\nimport { connect } from \"react-redux\";\nimport contactsOperation from \"../../redux/contacts/contactsOperation\";\n\nlet ContactListItem = ({ contact, onDelContact, id }) => (\n <li className=\"ContactList-item\">\n\n  <span className=\"ContactList-text\">{contact.name}: {contact.number}</span>\n   <button\n    className=\"ContactList-button\"\n    onClick={() => {\n     onDelContact(id);\n    }}\n   >\n    Delete\n   </button>\n </li>\n);\n\nconst mapDispatchToProps = { onDelContact: contactsOperation.delContact };\n\nexport default connect(null, mapDispatchToProps)(ContactListItem);","import React from \"react\";\nimport ContactListItem from \"./ContactListItem\";\nimport PropTypes from \"prop-types\";\nimport \"./ContactList.css\"\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nlet ContactList = ({ contacts }) => (\n <section>\n  <TransitionGroup component=\"ul\" className=\"ContactList\">\n   {contacts.map(contact => (\n    <CSSTransition key={contact.id} timeout={200} classNames=\"ContactList-item\">\n     <ContactListItem contact={contact} id={contact.id} />\n    </CSSTransition>\n   ))}\n  </TransitionGroup>\n </section>\n);\n\nexport default ContactList;\n\nContactList.propTypes = {\n contacts: PropTypes.array.isRequired\n};\n","import React, {Component} from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsOperation from \"../../redux/contacts/contactsOperation\";\nimport \"./ContactForm.css\"\n\nclass ContactForm extends Component {\n state = {\n  name: \"\",\n  number: \"\"\n };\n\n handleSubmit = e => {\n  e.preventDefault();\n\n  this.props.changeIsAlready(this.state.name) && this.props.onAddItem(this.state.name, this.state.number);\n  this.setState(() => {\n   return { name: \"\", number: \"\" };\n  });\n };\n\n handleChange = e => {\n  let { value, name } = e.target;\n\n  this.setState(() => {\n   return { [name]: value };\n  });\n };\n\n render() {\n  return (\n   <form className=\"ContactEditor\" onSubmit={this.handleSubmit}>\n    <label className=\"ContactEditor-label\">\n     Name\n     <input\n      className=\"ContactEditor-input\"\n      onChange={this.handleChange}\n      value={this.state.name}\n      name=\"name\"\n      type=\"text\"\n      maxLength=\"12\"\n      autoComplete=\"off\"\n      required\n     />\n    </label>\n    <label className=\"ContactEditor-label\">\n     Number\n     <input\n      className=\"ContactEditor-input\"\n      onChange={this.handleChange}\n      value={this.state.number}\n      name=\"number\"\n      type=\"tel\"\n      autoComplete=\"off\"\n      maxLength=\"13\"\n     />\n    </label>\n    <button className=\"ContactEditor-button\">Add contact</button>\n   </form>\n  );\n }\n}\n\nconst mapDispatchToProps = { onAddItem: contactsOperation.addContact };\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport \"./Filter.css\";\nimport PropTypes from \"prop-types\";\nimport contactsAction from \"../../redux/contacts/contactsAction\";\nimport { connect } from \"react-redux\";\n\nlet Filter = ({ filter, onChangeFilter }) => {\n return (\n  <form className=\"filterEditor\">\n   <label className=\"filterLabel\">\n    Find contacts by name\n    <input\n     className=\"filterInput\"\n     onChange={e => onChangeFilter(e.target.value)}\n     value={filter}\n     name=\"filter\"\n     type=\"text\"\n     autoComplete=\"off\"\n    />\n   </label>\n  </form>\n );\n};\n\nconst mapDispatchToProps = { onChangeFilter: contactsAction.filter };\n\nexport default connect(null, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n onChangeFilter: PropTypes.func.isRequired,\n filter: PropTypes.string\n};\n","import React from \"react\";\nimport \"./isAlreadyTrue.css\";\n\nlet IsAlreadyTrue = ({ onChangeIsAlready }) => {\n setTimeout(onChangeIsAlready, 3000);\n return <p className={alert}> Contact already exists!</p>;\n};\n\nexport default IsAlreadyTrue;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getLoading = state => state.app.loading;\nconst getContactsSelector = state => state.app.contacts;\nconst getFilter = state => state.app.filter;\n\nconst contactsArrayFilteredSel = createSelector(\n [getContactsSelector, getFilter],\n (contacts, filterSelelector) =>\n  contacts.filter(contact => contact.name.toLowerCase().includes(filterSelelector.toLowerCase()))\n);\n\nconst getContactIsAlready = createSelector([(state, name) => name, getContactsSelector], (name, contacts) =>\n contacts.find(contact => name === contact.name)\n);\n\nexport default {\n getLoading,\n getContactsSelector,\n getFilter,\n contactsArrayFilteredSel,\n getContactIsAlready\n};\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ContactList from \"./ContactList/ContactList\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport Filter from \"./Filter/Filter\";\nimport IsAlreadyTrue from \"./IsAlreadyTrue/IsAlreadyTrue\";\nimport \"./App.css\";\nimport animationIsAlready from \"./IsAlreadyTrue/isAlreadyTrueAnimation.module.css\";\nimport FilterAnimation from \"./Filter/FilterAnimation.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsOperation from \"../redux/contacts/contactsOperation\";\nimport contactsSelector from \"../redux/contacts/contactsSelectors\";\nimport contactsSelectors from \"../redux/contacts/contactsSelectors\";\n\nclass App extends Component {\n state = {\n  isAlready: false\n };\n\n componentDidMount() {\n  this.props.getContacts();\n }\n\n changeIsAlready = name => {\n  if (contactsSelectors.getContactIsAlready(this.props.state, name)) {\n   this.setState({ isAlready: true });\n   return false;\n  } else {\n   this.setState({ isAlready: false });\n  }\n  return true;\n };\n\n render() {\n  const { contacts, loading, contactsArrayFiltered } = this.props;\n\n  return (\n   <div className='wrapper'>\n    <CSSTransition\n     in={this.state.isAlready === true}\n     timeout={300}\n     classNames={animationIsAlready}\n     unmountOnExit\n    >\n      \n     <IsAlreadyTrue onChangeIsAlready={this.changeIsAlready} />\n    </CSSTransition>\n\n    <div className=\"header\">\n      <CSSTransition\n          in={true}\n          appear={true}\n          classNames='fade'\n          timeout={500}\n          unmountOnExit\n        >\n          <h1 className='logo'>Phonebook</h1>\n      </CSSTransition>\n      </div>\n      \n     <ContactForm changeIsAlready={this.changeIsAlready} />\n\n     <CSSTransition in={contacts.length > 1} timeout={300} classNames={FilterAnimation} unmountOnExit>\n      <Filter />\n     </CSSTransition>\n     {loading && <h3>Loading...</h3>}\n     <ContactList contacts={contactsArrayFiltered} />\n    \n   </div>\n  );\n }\n}\n\nconst mapStateToProps = state => ({\n filter: contactsSelector.getFilter(state),\n contacts: contactsSelectors.getContactsSelector(state),\n loading: contactsSelectors.getLoading(state),\n contactsArrayFiltered: contactsSelectors.contactsArrayFilteredSel(state),\n state\n});\n\nlet mapDispatchToProps = { getContacts: contactsOperation.getContacts };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsAction from \"./contactsAction\";\n\nconst appFilter = createReducer(\"\", { [contactsAction.filter]: (state, action) => action.payload });\n\nconst appContacts = createReducer([], {\n [contactsAction.getContactsSuccess]: (state, action) => action.payload,\n [contactsAction.addContactSuccess]: (state, action) => [...state, action.payload],\n [contactsAction.delContactSuccess]: (state, action) => state.filter(contact => contact.id !== action.payload)\n});\n\nconst loading = createReducer(false, {\n [contactsAction.addContactRequest]: () => true,\n [contactsAction.addContactSuccess]: () => false,\n [contactsAction.addContactError]: () => false,\n [contactsAction.getContactsRequest]: () => true,\n [contactsAction.getContactsSuccess]: () => false,\n [contactsAction.getContactsError]: () => false,\n [contactsAction.delContactRequest]: () => true,\n [contactsAction.delContactSuccess]: () => false,\n [contactsAction.delContactError]: () => false\n});\n\nexport default combineReducers({ filter: appFilter, contacts: appContacts, loading });\n","import app from \"../redux/contacts/contactsReducer\";\n\nimport { configureStore } from \"@reduxjs/toolkit\";\n\nconst store = configureStore({\n  reducer: { app },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.js\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}